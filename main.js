!function(){"use strict";var e={182:function(e,t,n){e.exports=n.p+"954d1ecf00812f229770.svg"},287:function(e,t,n){e.exports=n.p+"1f7d16b35c5c82880559.svg"},983:function(e,t,n){e.exports=n.p+"93d4395eb12af67dc0ab.svg"},80:function(e,t,n){e.exports=n.p+"6c7bf05444b9793fdf6e.svg"},545:function(e,t,n){e.exports=n.p+"9b460036438b6c9b7968.jpg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="";var r={};!function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}n.d(r,{BU:function(){return N},rC:function(){return U}});var t=function(){function t(e){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(e)}var n,r;return n=t,(r=[{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__icon"))&&e.close()}))}},{key:"open",value:function(){this._popup.classList.add("popup_visible"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_visible"),document.addEventListener("keydown",this._handleEscClose)}}])&&e(n.prototype,r),t}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=c(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},u.apply(this,arguments)}function c(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}function a(e,t){return a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},a(e,t)}function l(e,t){if(t&&("object"===o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(p,e);var t,n,r,o,c=(r=p,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(r);if(o){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return l(this,e)});function p(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),(n=c.call(this,e))._submitTheForm=t,n}return t=p,(n=[{key:"_getInputValues",value:function(){var e={};return this._popup.querySelectorAll(".popup__input").forEach((function(t){return e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;u(s(p.prototype),"setEventListeners",this).call(this),this._popup.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("submit",this._submitTheForm)}},{key:"close",value:function(){u(s(p.prototype),"close",this).call(this),this._popup.querySelector(".popup__form").reset()}}])&&i(t.prototype,n),p}(t);function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?t.classList.add(this._inactiveButtonClass):t.classList.remove(this._inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);this._toggleButtonState(t,n),t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButtonState(t,n)}))}))}},{key:"resetValidation",value:function(){var e,t=this;this._inputList=function(e){if(Array.isArray(e))return f(e)}(e=this._formElement.querySelectorAll(this._inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return f(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?f(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((function(e){t._hideInputError(e)}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&d(t.prototype,n),e}(),_=y;function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._templateElement=n,this._onImageClick=r}var t,n;return t=e,(n=[{key:"_handlePreviewImage",value:function(){this._onImageClick({link:this._link,name:this._name})}},{key:"_setEventListeners",value:function(){var e=this,t=this._cardElement.querySelector(".card__button"),n=this._cardElement.querySelector(".card__delete-button");t.addEventListener("click",(function(e){e.target.classList.toggle("card__button_black")})),n.addEventListener("click",(function(t){e._cardElement.remove()})),this._cardElement.querySelector(".card__image").addEventListener("click",(function(){e._handlePreviewImage()}))}},{key:"createCard",value:function(){return this._cardElement=this._templateElement.querySelector(".card").cloneNode(!0),this._cardElement.querySelector(".card__title").textContent=this._name,this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__image").alt=this._name,this._setEventListeners(),this._cardElement}}])&&m(t.prototype,n),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t,n){var r=t.items,o=t.render;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._render=o,this._elementSelector=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._element=e._render(t)}))}},{key:"addItem",value:function(e){this._elementSelector.prepend(e)}}])&&v(t.prototype,n),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function E(e,t){return E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},E(e,t)}function S(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return w(e)}function w(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=C(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function C(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=O(t);if(n){var o=O(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return S(this,e)});function o(e){var t,n,i,u,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),c=function(e){var r=e.link,i=e.name,u=n._popup.querySelector(".popup__figure"),c=n._popup.querySelector(".popup__image");u.textContent=i,c.src=r,c.alt=i,k((t=w(n),O(o.prototype)),"open",t).call(t)},(u="open")in(i=w(n=r.call(this,e)))?Object.defineProperty(i,u,{value:c,enumerable:!0,configurable:!0,writable:!0}):i.open=c,n}return o}(t);function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t){var n=t.profileName,r=t.profileDescription;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=n,this._profileDescription=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:U.textContent,description:N.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.description;U.textContent=t,N.textContent=n}}])&&j(t.prototype,n),e}(),I=n(983),x=n(545),B=n(80),P=n(182),R=n(287);document.getElementById("header__logo").src=I,document.getElementById("profile__photo").src=x,document.getElementById("profile__icon-edit-button").src=B,document.getElementById("profile__icon-add-button").src=P,document.getElementById("popup__icon").src=R,document.getElementById("popup__icon_type_add-card").src=R,document.getElementById("popup__icon_type_zoom-image").src=R;var T=document.querySelector(".profile__edit-button"),A=document.querySelector(".profile__add-button"),V=document.querySelector(".popup_type_edit-profile"),D=document.querySelector(".popup_type_add-card"),U=document.querySelector(".profile__name"),N=document.querySelector(".profile__description"),M=document.querySelector(".popup__input_type_name"),z=document.querySelector(".popup__input_type_description"),F=document.querySelector(".popup__input_type_url"),Y=document.querySelector(".popup__input_type_title"),$=document.querySelector("#template").content,G=(document.querySelector(".cards"),document.querySelector(".popup__figure"),document.querySelector(".popup__image"),V.querySelector(".popup__form")),H=D.querySelector(".popup__form"),J={inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},K=new p(".popup_type_edit-profile",(function(e){e.preventDefault(),ee.setUserInfo({name:M.value,description:z.value}),K.close()})),Q=new p(".popup_type_add-card",(function(e){e.preventDefault();var t=X({name:Y.value,link:F.value});Z.addItem(t),Q.close()}));T.addEventListener("click",(function(){var e;K.open(),K.setEventListeners(),e=ee.getUserInfo(),M.value=e.name,z.value=e.description,te.resetValidation()})),A.addEventListener("click",(function(){Q.open(),Q.setEventListeners(),ne.resetValidation()}));var W=new L(".popup_type_zoom-image");function X(e){return new h(e,$,W.open).createCard()}W.setEventListeners();var Z=new b({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],render:function(e){var t=X(e);Z.addItem(t)}},".cards");Z.renderItems();var ee=new q({profileName:U.textContent,profileDescription:N.textContent}),te=new _(J,G);te.enableValidation();var ne=new _(J,H);ne.enableValidation()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T0FDakJWLEVBQWlCVyxvQkF5Q1hGLEVBQVdQLEdBQWNVLGNBQy9CcEIsRUFBVW5GLE1BQVFvRyxFQUFTckcsS0FDM0JxRixFQUFpQnBGLE1BQVFvRyxFQUFTNUIsWUFlbENnQyxHQUFzQkMscUJBcEQxQnpCLEVBQVVoRyxpQkFBaUIsU0FBUyxXQUNoQytHLEVBQVlNLE9BQ1pOLEVBQVlPLG9CQStDWkksR0FBcUJELHFCQTFDekIsSUFBTUUsRUFBYSxJQUFJM0MsRUFBZSwwQkFHdEMsU0FBU2lDLEVBQVdXLEdBQ2hCLE9BQU8sSUFBSXRFLEVBQUtzRSxFQUFVckIsRUFBaUJvQixFQUFXTixNQUFNSixhQUhoRVUsRUFBV0wsb0JBT1gsSUFBTUosRUFBYSxJQUFJM0MsRUFBUSxDQUMzQkMsTUNoRmlCLENBQUMsQ0FDbEJ6RCxLQUFNLGtCQUNONkMsS0FBTSxvREFFVixDQUNJN0MsS0FBTSxjQUNONkMsS0FBTSx1REFFVixDQUNJN0MsS0FBTSxpQkFDTjZDLEtBQU0sMERBRVYsQ0FDSTdDLEtBQU0sVUFDTjZDLEtBQU0sbURBRVYsQ0FDSTdDLEtBQU0sd0JBQ042QyxLQUFNLG1EQUVWLENBQ0k3QyxLQUFNLGlCQUNONkMsS0FBTSxpREQwRGVhLE9BQVEsU0FBQ0ksR0FDMUIsSUFBTWdELEVBQVVaLEVBQVdwQyxHQUMzQnFDLEVBQVdDLFFBQVFVLEtBRXhCLFVBRUhYLEVBQVdZLGNBbUJYLElBQU1qQixHQUFnQixJQUFJMUIsRUFBUyxDQUFFQyxZQUFhQSxFQUFZaEQsWUFBYWlELG1CQUFvQkEsRUFBbUJqRCxjQWM1R29GLEdBQXdCLElBQUl0RyxFQUFjQyxFQUFjc0YsR0FDOURlLEdBQXNCTyxtQkFDdEIsSUFBTUwsR0FBdUIsSUFBSXhHLEVBQWNDLEVBQWN1RixHQUM3RGdCLEdBQXFCSyxtQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0X3NwcmludF84X2ZpbmFsL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3dlYl9wcm9qZWN0X3NwcmludF84X2ZpbmFsL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9zcHJpbnRfOF9maW5hbC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3dlYl9wcm9qZWN0X3NwcmludF84X2ZpbmFsL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3dlYl9wcm9qZWN0X3NwcmludF84X2ZpbmFsLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9zcHJpbnRfOF9maW5hbC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9zcHJpbnRfOF9maW5hbC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9zcHJpbnRfOF9maW5hbC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9zcHJpbnRfOF9maW5hbC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9zcHJpbnRfOF9maW5hbC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3Rfc3ByaW50XzhfZmluYWwvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X3NwcmludF84X2ZpbmFsLy4vc3JjL3NjcmlwdHMvc2NyaXB0LmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X3NwcmludF84X2ZpbmFsLy4vc3JjL3NjcmlwdHMvaW50aWFsLWNhcmRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBkZWZpbml0aW9uKSB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iaiwgcHJvcCkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7IH0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB9XHJcbiAgICBfaGFuZGxlRXNjQ2xvc2UgPSAoZXZ0KSA9PiB7XHJcbiAgICAgICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwJykgfHwgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX19pY29uJykpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIG9wZW4oKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChgcG9wdXBfdmlzaWJsZWApO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICB9XHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKGBwb3B1cF92aXNpYmxlYCk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRTZWxlY3Rvciwgc3VibWl0VGhlRm9ybSkge1xyXG4gICAgICAgIHN1cGVyKGVsZW1lbnRTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0VGhlRm9ybSA9IHN1Ym1pdFRoZUZvcm07XHJcbiAgICB9XHJcblxyXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgICAgIGNvbnN0IGlucHV0SW5mbyA9IHt9O1xyXG4gICAgICAgIGNvbnN0IGlucHV0TGlzdCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cF9faW5wdXQnKTtcclxuICAgICAgICBpbnB1dExpc3QuZm9yRWFjaCgoaXRlbSkgPT4gaW5wdXRJbmZvW2l0ZW0ubmFtZV0gPSBpdGVtLnZhbHVlKTtcclxuICAgICAgICByZXR1cm4gaW5wdXRJbmZvO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlLWJ1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHsgdGhpcy5jbG9zZSgpOyB9KVxyXG4gICAgICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHRoaXMuX3N1Ym1pdFRoZUZvcm0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJykucmVzZXQoKTtcclxuICAgIH1cclxufSIsImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gICAgY29uc3RydWN0b3IocGFnZVNldHRpbmdzLCBmb3JtRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBwYWdlU2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHBhZ2VTZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gcGFnZVNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gcGFnZVNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgICAgICB0aGlzLl9lcnJvckNsYXNzID0gcGFnZVNldHRpbmdzLmVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcclxuXHJcbiAgICB9XHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcclxuICAgICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcblxyXG4gICAgfVxyXG4gICAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcblxyXG4gICAgfVxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgICAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkgeyAvLyBpZiBpbnB1dCBlbGVtZW50IGhhcyBub3QgdmFsaWQgKHRydWUpIHNob3cgaW5wdXQgbWVzc2FnZSAod2l0aCBmdW5jLikgLy9cclxuICAgICAgICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG5cclxuICAgICAgICB9IGVsc2UgeyAvLyBlbHNlIGhpZGUgdGhlIG1lc3NhZ2UgKHdpdGggZnVuYy4pXHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XHJcbiAgICAgICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWRcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIF90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpIHtcclxuICAgICAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcclxuICAgICAgICAgICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSk7IC8vZmluZCBhbGwgaW5wdXRzIGluIG91ciBwYWdlIGFuZCBjcmVhdGluZyBhbiBhcnJheSAhXHJcbiAgICAgICAgY29uc3QgYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpOyAvLyBmaW5kIGFsbCBzeW1iaXQgYnV0dG9uIGluIG91ciBwYWdlICYgY3JlYXRpbmcgYXJyYXkgISBcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpO1xyXG4gICAgICAgIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7IC8vZm9yIGFsbCBpbnB1dCBlbGVtZW50IGFkZCBldmVudCBhbmQgY2hlY2sgdmFsaWRpdHkgJiB0b2dnbGUgYnV0dG9uIGFjY29yZGluZyB0aGUgdmFsaWRpdHkgXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICB9XHJcbiAgICByZXNldFZhbGlkYXRpb24oKSB7IC8vLyBmb3JtIHJlc2V0aW5nIGFuZCBoaWRlIHZhbGlkYXRpb24gbWVzc2FnZXNcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QgPSBbLi4udGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XHJcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKHRoaXMuX2lucHV0TGlzdCwgdGhpcy5fYnV0dG9uRWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIH1cclxuXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjsiLCJpbXBvcnQgeyBwb3B1cEZpZ3VyZSwgY2FyZEltYWdlIH0gZnJvbSBcIi4uL3NjcmlwdC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgICBjb25zdHJ1Y3RvcihkYXRhLCB0ZW1wbGF0ZUVsZW1lbnQsIG9uSW1hZ2VDbGljaykge1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgICAgICB0aGlzLl90ZW1wbGF0ZUVsZW1lbnQgPSB0ZW1wbGF0ZUVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5fb25JbWFnZUNsaWNrID0gb25JbWFnZUNsaWNrO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBfaGFuZGxlUHJldmlld0ltYWdlKCkge1xyXG4gICAgICAgIHRoaXMuX29uSW1hZ2VDbGljayh7IGxpbms6IHRoaXMuX2xpbmssIG5hbWU6IHRoaXMuX25hbWUgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIGNvbnN0IGNhcmRCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2J1dHRvblwiKTtcclxuICAgICAgICBjb25zdCBkZWxldGVCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZS1idXR0b25cIik7XHJcblxyXG4gICAgICAgIGNhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB7IC8vLyBmdW5jIGZvciBhbGwgbGlrZSBidXR0b25zICFcclxuXHJcbiAgICAgICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZShgY2FyZF9fYnV0dG9uX2JsYWNrYCk7XHJcblxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB7IC8vLyBkZWxldGluZyBjYXJzIGZ1bmMgIVxyXG5cclxuICAgICAgICAgICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcblxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9faW1hZ2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHsgLy8vZXZlbnQgZm9yIGltYWdlIHBvcHVwIFxyXG5cclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlUHJldmlld0ltYWdlKCk7XHJcblxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlQ2FyZCgpIHtcclxuICAgICAgICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX3RlbXBsYXRlRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIikuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gICAgICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIikuc3JjID0gdGhpcy5fbGluaztcclxuICAgICAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpLmFsdCA9IHRoaXMuX25hbWU7XHJcblxyXG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gICAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyIH0sIGVsZW1lbnRTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICAgICAgdGhpcy5fcmVuZGVyID0gcmVuZGVyOy8vIGNhbGwgYmFjayBmdW5jdGlvbiBmb3IgY29ubmVjdGlvbiBiZXR3ZWVuIGNsYXNzZXMgXHJcbiAgICAgICAgdGhpcy5fZWxlbWVudFNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbGVtZW50U2VsZWN0b3IpO1xyXG4gICAgfVxyXG4gICAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICAgICAgdGhpcy5faXRlbXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX3JlbmRlcihlbGVtZW50KTtcclxuXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50U2VsZWN0b3IucHJlcGVuZChlbGVtZW50KTtcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3RvcilcclxuICAgIH1cclxuXHJcbiAgICBvcGVuID0gKHsgbGluaywgbmFtZSB9KSA9PiB7XHJcbiAgICAgICAgY29uc3QgcG9wdXBGaWd1cmUgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19maWd1cmVcIik7XHJcbiAgICAgICAgY29uc3QgY2FyZEltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XHJcbiAgICAgICAgcG9wdXBGaWd1cmUudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgICAgIGNhcmRJbWFnZS5zcmMgPSBsaW5rO1xyXG4gICAgICAgIGNhcmRJbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIH1cclxufSIsImltcG9ydCB7IHByb2ZpbGVOYW1lLCBwcm9maWxlRGVzY3JpcHRpb24gfSBmcm9tICcuLi9zY3JpcHQuanMnXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgcHJvZmlsZU5hbWUsIHByb2ZpbGVEZXNjcmlwdGlvbiB9KSB7XHJcblxyXG4gICAgICAgIHRoaXMuX3Byb2ZpbGVOYW1lID0gcHJvZmlsZU5hbWU7XHJcbiAgICAgICAgdGhpcy5fcHJvZmlsZURlc2NyaXB0aW9uID0gcHJvZmlsZURlc2NyaXB0aW9uO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBnZXRVc2VySW5mbygpIHtcclxuICAgICAgICBjb25zdCBpbmZvQWJvdXRVc2VyID0geyBuYW1lOiBwcm9maWxlTmFtZS50ZXh0Q29udGVudCwgZGVzY3JpcHRpb246IHByb2ZpbGVEZXNjcmlwdGlvbi50ZXh0Q29udGVudCB9XHJcbiAgICAgICAgcmV0dXJuIGluZm9BYm91dFVzZXJcclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VySW5mbyh7IG5hbWUsIGRlc2NyaXB0aW9uIH0pIHtcclxuICAgICAgICBwcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZGVzY3JpcHRpb247XHJcbiAgICB9XHJcblxyXG59IiwiaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBpbml0aWFsQ2FyZHMgZnJvbSBcIi4vaW50aWFsLWNhcmRzLmpzXCJcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBDYXJkIGZyb20gXCIuL2NvbXBvbmVudHMvQ2FyZC5qc1wiXHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4vY29tcG9uZW50cy9Vc2VySW5mb1wiO1xyXG5pbXBvcnQgJy4uL3BhZ2VzL2luZGV4LmNzcydcclxuLy8gaW1wb3J0aW5nIGltYWdlcyBcclxuaW1wb3J0IGxvZ29IZWFkZXJTcmMgZnJvbSAnLi4vaW1hZ2VzL2xvZ28xLnN2Zyc7IC8vIHNvdXJjZSBvZiBsb2dvIFxyXG5pbXBvcnQgcHJvZmlsZVBob3RvU3JjIGZyb20gJy4uL2ltYWdlcy9zcGFydG5hX19pbWFnZS5qcGcnO1xyXG5pbXBvcnQgcHJvZmlsZUljb25FZGl0QnV0dG9uIGZyb20gJy4uL2ltYWdlcy9sb2dvX19idXR0b24uc3ZnJztcclxuaW1wb3J0IGFkZEJ1dHRvbkltZ1NyYyBmcm9tICcuLi9pbWFnZXMvQWRkX19idXR0b24uc3ZnJ1xyXG5pbXBvcnQgcG9wdXBDbG9zZUljb25TcmMgZnJvbSAnLi4vaW1hZ2VzL0Nsb3NlX19idXR0b24uc3ZnJztcclxuY29uc3QgbG9nb0hlYWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoZWFkZXJfX2xvZ28nKTsvLyBmaW5kIHRoZSBsb2dvIFxyXG5sb2dvSGVhZGVyLnNyYyA9IGxvZ29IZWFkZXJTcmM7IC8vIGFkZCB0aGUgc3JjIHRvIHRoZSBET00gZWxlbWVudFxyXG5jb25zdCBwcm9maWxlUGhvdG8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvZmlsZV9fcGhvdG8nKTtcclxucHJvZmlsZVBob3RvLnNyYyA9IHByb2ZpbGVQaG90b1NyYztcclxuY29uc3QgcHJvZmlsZUVkaXRJY29uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2ZpbGVfX2ljb24tZWRpdC1idXR0b24nKTtcclxucHJvZmlsZUVkaXRJY29uLnNyYyA9IHByb2ZpbGVJY29uRWRpdEJ1dHRvbjtcclxuY29uc3QgYWRkQnV0dG9uSW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2ZpbGVfX2ljb24tYWRkLWJ1dHRvbicpO1xyXG5hZGRCdXR0b25JbWcuc3JjID0gYWRkQnV0dG9uSW1nU3JjXHJcbmNvbnN0IHBvcHVwQ2xvc2VJY29uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BvcHVwX19pY29uJyk7XHJcbnBvcHVwQ2xvc2VJY29uLnNyYyA9IHBvcHVwQ2xvc2VJY29uU3JjXHJcbmNvbnN0IHBvcHVwQ2xvc2VJY29uQWRkQ2FyZEZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9wdXBfX2ljb25fdHlwZV9hZGQtY2FyZCcpO1xyXG5wb3B1cENsb3NlSWNvbkFkZENhcmRGb3JtLnNyYyA9IHBvcHVwQ2xvc2VJY29uU3JjXHJcbmNvbnN0IHBvcHVwQ2xvc2VJY29uWm9vbUltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3B1cF9faWNvbl90eXBlX3pvb20taW1hZ2UnKTtcclxucG9wdXBDbG9zZUljb25ab29tSW1nLnNyYyA9IHBvcHVwQ2xvc2VJY29uU3JjXHJcbi8vIHZhcmlhYmxlcyBcclxuY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIik7XHJcbmNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuY29uc3QgcG9wdXBUeXBlRWRpdFByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfZWRpdC1wcm9maWxlXCIpO1xyXG5jb25zdCBwb3B1cFR5cGVBZGRDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2FkZC1jYXJkXCIpO1xyXG5jb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKTtcclxuY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiKTtcclxuY29uc3QgaW5wdXROYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdHlwZV9uYW1lXCIpO1xyXG5jb25zdCBpbnB1dERlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdHlwZV9kZXNjcmlwdGlvblwiKTtcclxuY29uc3QgaW5wdXRVcmwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90eXBlX3VybFwiKTtcclxuY29uc3QgaW5wdXRDYXJkVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90eXBlX3RpdGxlXCIpO1xyXG5jb25zdCBlbGVtZW50VGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RlbXBsYXRlXCIpLmNvbnRlbnQ7IC8vL3RlbXBsYXRlIGNvbnRlbnRcclxuY29uc3QgY2FyZHNTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc1wiKTsgLy8gY2FyZHMgc2VjdGlvbiBcclxuY29uc3QgcG9wdXBGaWd1cmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19maWd1cmVcIik7XHJcbmNvbnN0IGNhcmRJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xyXG5jb25zdCBmb3JtVHlwZUVkaXRQcm9maWxlID0gcG9wdXBUeXBlRWRpdFByb2ZpbGUucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbmNvbnN0IGZvcm10eXBlQWRkQ2FyZCA9IHBvcHVwVHlwZUFkZENhcmQucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbmNvbnN0IHBhZ2VTZXR0aW5ncyA9IHtcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19zYXZlLWJ1dHRvblwiLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fc2F2ZS1idXR0b25fZGlzYWJsZWRcIixcclxuICAgIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gICAgZXJyb3JDbGFzczogXCJwb3B1cF9fZXJyb3JfdmlzaWJsZVwiXHJcbn1cclxuLy8gXHJcbmNvbnN0IGVkaXRQcm9maWxlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIi5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZVwiLCBzYXZlVXNlckluZm8pOy8vaW5zdGFuY2VzIGZvciBGb3Jtc1xyXG5jb25zdCBhZGRDYXJkRm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLnBvcHVwX3R5cGVfYWRkLWNhcmRcIiwgc3VibWl0QWRkQ2FyZEZvcm0pO1xyXG5cclxuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGVkaXRQcm9maWxlUG9wdXAub3BlbigpO1xyXG4gICAgZWRpdFByb2ZpbGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgZmlsbEVkaXRQcm9maWxlRm9ybSgpO1xyXG4gICAgcmVzZXRBbmRWYWxpZGF0ZVByb2ZpbGVJbmZvKCk7XHJcblxyXG59KTtcclxuXHJcbmFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGFkZENhcmRGb3JtLm9wZW4oKTtcclxuICAgIGFkZENhcmRGb3JtLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICByZXNldEFuZFZhbGlkYXRlQWRkQ2FyZEZvcm0oKTtcclxuXHJcbn0pO1xyXG5cclxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnLnBvcHVwX3R5cGVfem9vbS1pbWFnZScpOy8vIGluc3RhbmNlIGZvciBwb3B1cCBvZiB0aGUgaW1hZ2UgXHJcbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTsvLyBzZXQgZXZlbnQgaGFuZGxlcnMgZm9yIGl0IFxyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChjYXJkSW5mbykgey8vIHJldHVybiBjYXJkIGVsZW1lbnRcclxuICAgIHJldHVybiBuZXcgQ2FyZChjYXJkSW5mbywgZWxlbWVudFRlbXBsYXRlLCBpbWFnZVBvcHVwLm9wZW4pLmNyZWF0ZUNhcmQoKTtcclxufVxyXG5cclxuXHJcbmNvbnN0IGNhcmRSZW5kZXIgPSBuZXcgU2VjdGlvbih7XHJcbiAgICBpdGVtczogaW5pdGlhbENhcmRzLCByZW5kZXI6IChlbGVtZW50KSA9PiB7Ly8gY3JlYXRlIGluc3RhbmNlIG9mIHNlY3Rpb24gZnJvbSBpbnRpYWxDYXJkcyBcclxuICAgICAgICBjb25zdCBuZXdDYXJkID0gY3JlYXRlQ2FyZChlbGVtZW50KTsgLy8gcmVuZGVyID0+IGNhbGwgYmFjayBmdW5jdGlvbiB0aGF0IGNvbm5lY3RzIGJldHdlZW4gU2VjdGlvbiBjbGFzcyBhbmQgQ2FyZCBjbGFzcyBcclxuICAgICAgICBjYXJkUmVuZGVyLmFkZEl0ZW0obmV3Q2FyZCk7XHJcbiAgICB9XHJcbn0sIFwiLmNhcmRzXCIpXHJcblxyXG5jYXJkUmVuZGVyLnJlbmRlckl0ZW1zKCk7Ly8gIGFkZCBpbnRpYWwgQ2FyZHMgdG8gdGhlIERPTSBcclxuXHJcbmZ1bmN0aW9uIHN1Ym1pdEFkZENhcmRGb3JtKGV2ZW50KSB7IC8vLy9mdW5jdGlvbiBmb3Igc3VibWl0IG5ldyBjYXJkIFxyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZCh7XHJcbiAgICAgICAgbmFtZTogaW5wdXRDYXJkVGl0bGUudmFsdWUsXHJcbiAgICAgICAgbGluazogaW5wdXRVcmwudmFsdWVcclxuICAgIH0pO1xyXG4gICAgY2FyZFJlbmRlci5hZGRJdGVtKGNhcmRFbGVtZW50KTsgLy8gcGxhY2UgdGhlIGNhcmQgaW50byB0aGUgRE9NIFxyXG4gICAgYWRkQ2FyZEZvcm0uY2xvc2UoKTtcclxuXHJcbn1cclxuZnVuY3Rpb24gZmlsbEVkaXRQcm9maWxlRm9ybSgpIHsgLy8vIHRoZSBmdW5jdGlvbiB0YWtlcyB0aGUgdGV4dCB2YWx1ZSBmcm9tIHVzZXIgaW5mbyBhbmQgbWFrZSBpdCBhcHBlYXJzIGF0IHRoZSBpbnB1dCB2YWx1ZXMgb2YgdGhlIHBvcHVwIGZvcm0gXHJcbiAgICBjb25zdCB1c2VySW5mbyA9IGluZm9BYm91dFVzZXIuZ2V0VXNlckluZm8oKTtcclxuICAgIGlucHV0TmFtZS52YWx1ZSA9IHVzZXJJbmZvLm5hbWU7XHJcbiAgICBpbnB1dERlc2NyaXB0aW9uLnZhbHVlID0gdXNlckluZm8uZGVzY3JpcHRpb247XHJcblxyXG59XHJcblxyXG5jb25zdCBpbmZvQWJvdXRVc2VyID0gbmV3IFVzZXJJbmZvKHsgcHJvZmlsZU5hbWU6IHByb2ZpbGVOYW1lLnRleHRDb250ZW50LCBwcm9maWxlRGVzY3JpcHRpb246IHByb2ZpbGVEZXNjcmlwdGlvbi50ZXh0Q29udGVudCB9KTsgLy8vIGluc3RhbmNlIHdpdGggdGhlIFVzZXJJbmZvXHJcbmZ1bmN0aW9uIHNhdmVVc2VySW5mbyhldmVudCkge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGluZm9BYm91dFVzZXIuc2V0VXNlckluZm8oeyBuYW1lOiBpbnB1dE5hbWUudmFsdWUsIGRlc2NyaXB0aW9uOiBpbnB1dERlc2NyaXB0aW9uLnZhbHVlIH0pO1xyXG4gICAgZWRpdFByb2ZpbGVQb3B1cC5jbG9zZSgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZXNldEFuZFZhbGlkYXRlQWRkQ2FyZEZvcm0oKSB7XHJcbiAgICBhZGRDYXJkRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcclxufVxyXG5mdW5jdGlvbiByZXNldEFuZFZhbGlkYXRlUHJvZmlsZUluZm8oKSB7XHJcbiAgICBlZGl0VXNlckZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn1cclxuXHJcbmNvbnN0IGVkaXRVc2VyRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHBhZ2VTZXR0aW5ncywgZm9ybVR5cGVFZGl0UHJvZmlsZSk7Ly8gaW5zdGFuY2UgZm9yIHRoZSBmb3JtIHZhbGlkYXRpb24gZm9yIGVhY2ggZm9ybSBcclxuZWRpdFVzZXJGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuY29uc3QgYWRkQ2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihwYWdlU2V0dGluZ3MsIGZvcm10eXBlQWRkQ2FyZCk7XHJcbmFkZENhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmV4cG9ydCB7XHJcbiAgICBlZGl0VXNlckZvcm1WYWxpZGF0b3IsXHJcbiAgICBwb3B1cEZpZ3VyZSxcclxuICAgIGNhcmRJbWFnZSxcclxuICAgIHBvcHVwVHlwZUFkZENhcmQsXHJcbiAgICBwb3B1cFR5cGVFZGl0UHJvZmlsZSxcclxuICAgIGZpbGxFZGl0UHJvZmlsZUZvcm0sXHJcbiAgICByZXNldEFuZFZhbGlkYXRlQWRkQ2FyZEZvcm0sXHJcbiAgICByZXNldEFuZFZhbGlkYXRlUHJvZmlsZUluZm8sXHJcbiAgICBzYXZlVXNlckluZm8sXHJcbiAgICBzdWJtaXRBZGRDYXJkRm9ybSxcclxuICAgIHByb2ZpbGVOYW1lLFxyXG4gICAgcHJvZmlsZURlc2NyaXB0aW9uXHJcbn07XHJcblxyXG5cclxuXHJcbiIsImNvbnN0IGluaXRpYWxDYXJkcyA9IFt7XHJcbiAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS95b3NlbWl0ZS5qcGdcIlxyXG59LFxyXG57XHJcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xha2UtbG91aXNlLmpwZ1wiXHJcbn0sXHJcbntcclxuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvYmFsZC1tb3VudGFpbnMuanBnXCJcclxufSxcclxue1xyXG4gICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhdGVtYXIuanBnXCJcclxufSxcclxue1xyXG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvdmFub2lzZS5qcGdcIlxyXG59LFxyXG57XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhZ28uanBnXCJcclxufVxyXG5dO1xyXG5leHBvcnQgZGVmYXVsdCBpbml0aWFsQ2FyZHM7Il0sIm5hbWVzIjpbIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZCIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInAiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJldnQiLCJjbG9zZSIsInRoaXMiLCJfcG9wdXAiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJhZGQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmUiLCJQb3B1cFdpdGhGb3JtIiwiZWxlbWVudFNlbGVjdG9yIiwic3VibWl0VGhlRm9ybSIsIl9zdWJtaXRUaGVGb3JtIiwiaW5wdXRJbmZvIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJpdGVtIiwibmFtZSIsInZhbHVlIiwicmVzZXQiLCJGb3JtVmFsaWRhdG9yIiwicGFnZVNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsInRleHRDb250ZW50IiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiaW5wdXRMaXN0Iiwic29tZSIsImJ1dHRvbkVsZW1lbnQiLCJfaGFzSW52YWxpZElucHV0IiwiQXJyYXkiLCJmcm9tIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl9pbnB1dExpc3QiLCJfYnV0dG9uRWxlbWVudCIsInByZXZlbnREZWZhdWx0IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiQ2FyZCIsImRhdGEiLCJ0ZW1wbGF0ZUVsZW1lbnQiLCJvbkltYWdlQ2xpY2siLCJfbmFtZSIsIl9saW5rIiwibGluayIsIl90ZW1wbGF0ZUVsZW1lbnQiLCJfb25JbWFnZUNsaWNrIiwiY2FyZEJ1dHRvbiIsIl9jYXJkRWxlbWVudCIsImRlbGV0ZUJ1dHRvbiIsInRvZ2dsZSIsIl9oYW5kbGVQcmV2aWV3SW1hZ2UiLCJjbG9uZU5vZGUiLCJzcmMiLCJhbHQiLCJTZWN0aW9uIiwiaXRlbXMiLCJyZW5kZXIiLCJfaXRlbXMiLCJfcmVuZGVyIiwiX2VsZW1lbnRTZWxlY3RvciIsImVsZW1lbnQiLCJfZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cFdpdGhJbWFnZSIsInBvcHVwRmlndXJlIiwiY2FyZEltYWdlIiwiVXNlckluZm8iLCJwcm9maWxlTmFtZSIsInByb2ZpbGVEZXNjcmlwdGlvbiIsIl9wcm9maWxlTmFtZSIsIl9wcm9maWxlRGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvbiIsImdldEVsZW1lbnRCeUlkIiwibG9nb0hlYWRlclNyYyIsInByb2ZpbGVQaG90b1NyYyIsInByb2ZpbGVJY29uRWRpdEJ1dHRvbiIsImFkZEJ1dHRvbkltZ1NyYyIsInBvcHVwQ2xvc2VJY29uU3JjIiwiZWRpdEJ1dHRvbiIsImFkZEJ1dHRvbiIsInBvcHVwVHlwZUVkaXRQcm9maWxlIiwicG9wdXBUeXBlQWRkQ2FyZCIsImlucHV0TmFtZSIsImlucHV0RGVzY3JpcHRpb24iLCJpbnB1dFVybCIsImlucHV0Q2FyZFRpdGxlIiwiZWxlbWVudFRlbXBsYXRlIiwiY29udGVudCIsImZvcm1UeXBlRWRpdFByb2ZpbGUiLCJmb3JtdHlwZUFkZENhcmQiLCJlZGl0UHJvZmlsZVBvcHVwIiwiZXZlbnQiLCJpbmZvQWJvdXRVc2VyIiwic2V0VXNlckluZm8iLCJhZGRDYXJkRm9ybSIsImNhcmRFbGVtZW50IiwiY3JlYXRlQ2FyZCIsImNhcmRSZW5kZXIiLCJhZGRJdGVtIiwidXNlckluZm8iLCJvcGVuIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJnZXRVc2VySW5mbyIsImVkaXRVc2VyRm9ybVZhbGlkYXRvciIsInJlc2V0VmFsaWRhdGlvbiIsImFkZENhcmRGb3JtVmFsaWRhdG9yIiwiaW1hZ2VQb3B1cCIsImNhcmRJbmZvIiwibmV3Q2FyZCIsInJlbmRlckl0ZW1zIiwiZW5hYmxlVmFsaWRhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=